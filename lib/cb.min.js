!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.cb=n():e.cb=n()}("undefined"!=typeof self?self:this,function(){return function(e){var n={};function t(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";var i,o=t(1),r=(i=o)&&i.__esModule?i:{default:i};n.get=function(e){if(!("undefined"!=typeof Window&&"undefined"!=typeof Document&&"undefined"!=typeof Element&&"undefined"!=typeof window&&"undefined"!=typeof document&&window instanceof Window&&document instanceof Document))throw new Error("This script must run in a browser.");if(void 0===e)throw new Error('"el" parameter is required.');if(!(e instanceof Element))throw new Error('"el" parameter must be a Element instance.');var n=window.getComputedStyle(e).position;if("static"===n||"relative"===n)for(var t=e.parentElement;t;){var i=window.getComputedStyle(t).display;if("block"===i||"inline-block"===i||"list-item"===i||"table"===i||"flex"===i||"grid"===i)return t;t=t.parentElement}if("absolute"===n){for(var o=e.parentElement;o;){var r=window.getComputedStyle(o),l=r.position,a=r.transform,c=r.filter,f=r.willChange;if("static"!==l||"none"!==a||"transform"===f||"perspective"===f||"none"!==c||"filter"===f)return o;o=o.parentElement}return window.document}if("fixed"===n){for(var u=e.parentElement;u;){var s=window.getComputedStyle(u),p=s.transform,d=s.filter,m=s.willChange;if("none"!==p||"transform"===m||"perspective"===m||"none"!==d||"filter"===m)return u;u=u.parentElement}return window}return null},n.version=function(){return r.default.version}},function(e,n){e.exports={name:"containing-block",version:"1.0.2",description:"A utility function which find the containing block of a DOM element.",main:"lib/cb.js",repository:{type:"git",url:"https://github.com/zakplus/containing-block.git"},scripts:{build:"webpack"},keywords:["block","containing-block","CSS","DOM"],author:{name:"Valerio Bianchi",email:"contacts@valeriobianchi.com",url:"https://valeriobianchi.com"},license:"MIT",devDependencies:{"babel-core":"^6.26.0","babel-loader":"^7.1.2","babel-preset-env":"^1.6.1","clone-deep":"^3.0.1",eslint:"^4.16.0","eslint-config-airbnb-base":"^12.1.0","eslint-loader":"^1.9.0","eslint-plugin-import":"^2.8.0","uglifyjs-webpack-plugin":"^1.2.3",webpack:"^3.10.0"}}}])});